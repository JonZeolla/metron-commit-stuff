#!/bin/bash
#
# Finds all commits since the last release tag, then ensures that each
# is marked 'Done' and that the fix version == $NEXT_RELEASE.
#

#
# update LAST_RELEASE_TAG and NEXT_RELEASE as needed
#
LAST_RELEASE_TAG="apache-metron-0.4.1-release"
NEXT_RELEASE="0.4.2"
REPO="https://git-wip-us.apache.org/repos/asf/metron.git"
WORKDIR=`pwd`

# clone the metron repo and fetch all tags
git clone $REPO "metron-$NEXT_RELEASE"
cd "$WORKDIR/metron-$NEXT_RELEASE"
git fetch --all --tags

# find all JIRAs that have been committed since the last release
GET_JIRAS="git log tags/$LAST_RELEASE_TAG..HEAD --oneline | grep -E -o 'METRON[- ]*[0-9]+'"

# print the header
FORMAT_STR="%15s %15s %15s %30s %50s\n"
printf "$FORMAT_STR" "JIRA" "STATUS" "FIX VERSION" "ASSIGNEE" "FIX"

# for each JIRA since the last release tag...
eval $GET_JIRAS | while read JIRA ; do

	# fetch the JIRA content
	URL="https://issues.apache.org/jira/si/jira.issueviews:issue-xml/$JIRA/$JIRA.xml"
        CONTENT=`curl -s $URL`

	# painfully extract some fields
	STATUS=`echo "$CONTENT" | grep "<status[^>]*>" | sed 's/^.*<status[^>]*>//' | sed 's/<.status>.*$//'`
	ASSIGNEE=`echo "$CONTENT" | grep "<assignee[^>]*>" | sed 's/^.*<assignee[^>]*>//' | sed 's/<.assignee>.*$//'`
	FIXV=`echo "$CONTENT" | grep "<fixVersion[^>]*>" | sed 's/^.*<fixVersion[^>]*>//' | sed 's/<.fixVersion>.*$//'`

	# the link is only populated, if there is something to fix
	LINK=""
	if [ "$FIXV" != "$NEXT_RELEASE" ] || [ "$STATUS" != "Done" ]; then 
		LINK="https://issues.apache.org/jira/browse/$JIRA"
	fi

	# show the JIRA
      	printf "$FORMAT_STR" "$JIRA" "$STATUS" "$FIXV" "$ASSIGNEE" "$LINK"
done

#JIRA=

